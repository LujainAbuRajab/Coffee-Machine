/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package coffeemachinegiu;

import static coffeemachinegiu.MainCoffeeMachine.coffee;
import javax.swing.JOptionPane;

/**
 *
 * @author user
 */
public class ShotMenu extends javax.swing.JFrame {
    private int cofeeChioce; 
    /**
     * Creates new form ShotMenu
     */
    public ShotMenu() {
        initComponents();
    }
    public void setCoffeeChioce(int coffeChioce){
        this.cofeeChioce=coffeChioce;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        doubleShot = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        singleShot = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(71, 47, 35));

        jPanel1.setBackground(new java.awt.Color(71, 47, 35));

        doubleShot.setBackground(new java.awt.Color(206, 151, 96));
        doubleShot.setFont(new java.awt.Font("Malgun Gothic Semilight", 0, 24)); // NOI18N
        doubleShot.setText("Double shot");
        doubleShot.setBorder(null);
        doubleShot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doubleShotActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(71, 47, 35));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/coffeemachinegiu/imeges/icons8_exit_40px_2.png"))); // NOI18N
        jButton1.setBorder(null);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        singleShot.setBackground(new java.awt.Color(206, 151, 96));
        singleShot.setFont(new java.awt.Font("Malgun Gothic Semilight", 0, 24)); // NOI18N
        singleShot.setText(" Single shot");
        singleShot.setBorder(null);
        singleShot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                singleShotActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Bauhaus 93", 1, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText(" COFFEINE");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(jButton1)
                    .addComponent(doubleShot, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(singleShot, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(29, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(41, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addComponent(singleShot, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(doubleShot, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addComponent(jButton1)
                .addGap(27, 27, 27))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void singleShotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_singleShotActionPerformed
        // TODO add your handling code here:
        if(this.cofeeChioce==1){
            try{
                coffee.amricanoSingeWater();
            }catch(AmricanoSinglewater e){
                JOptionPane.showMessageDialog(this, e.getMessage());
                if(JOptionPane.showInputDialog("Do You want to fill the water tank?(yes/no)").equalsIgnoreCase("yes")){
                    int amountOfWater=Integer.parseInt(JOptionPane.showInputDialog("Enter the amount of water you need to fill: (range:30 ml-1000 ml)"));
                    try{
                        coffee.getWater().setAmontOfWater(amountOfWater);
                    }catch(OutOfwater e1){
                        JOptionPane.showMessageDialog(this,e1.getMessage());                                               
                    }
                } 
            }
            try{
                coffee.amricanoSingleBeans();
            }catch(AmricanoSingltbeans e){
                JOptionPane.showMessageDialog(this, e.getMessage());
                if(JOptionPane.showInputDialog("Do You want to fill the beans tank?(yes/no)").equalsIgnoreCase("yes")){
                    int amountOfBeans=Integer.parseInt(JOptionPane.showInputDialog("Enter the amount of beans you need to fill: (range: 7 gm-500 gm)"));
                    try{
                        coffee.getBeans().setAmountOfBeans(amountOfBeans);
                    }catch(OutOfBeans e1){
                        JOptionPane.showMessageDialog(this,e1.getMessage());                                              
                    }
                } 
            }
            
        }else if(this.cofeeChioce==2){
            try{
                coffee.expressoSingleWater();
            }catch(EspressoSinglewater e){
                JOptionPane.showMessageDialog(this, e.getMessage());
                if(JOptionPane.showInputDialog("Do You want to fill the water tank?(yes/no)").equalsIgnoreCase("yes")){
                    int amountOfWater=Integer.parseInt(JOptionPane.showInputDialog("Enter the amount of water you need to fill: (range:30 ml-1000 ml)"));
                    try{
                        coffee.getWater().setAmontOfWater(amountOfWater);
                    }catch(OutOfwater e1){
                        JOptionPane.showMessageDialog(this,e1.getMessage());                                               
                    }
                } 
            }
            try{
                coffee.expressoSingleBeans();
            }catch(EspressosSinglebeans e){
                JOptionPane.showMessageDialog(this, e.getMessage());
                if(JOptionPane.showInputDialog("Do You want to fill the beans tank?(yes/no)").equalsIgnoreCase("yes")){
                    int amountOfBeans=Integer.parseInt(JOptionPane.showInputDialog("Enter the amount of beans you need to fill: (range: 7 gm-500 gm)"));
                    try{
                        coffee.getBeans().setAmountOfBeans(amountOfBeans);
                    }catch(OutOfBeans e1){
                        JOptionPane.showMessageDialog(this,e1.getMessage());                                              
                    }
                }
            }
        }
        int grinding=Integer.parseInt(JOptionPane.showInputDialog("Enter the degree of grinding you want:\n"+"PS: IT should be between(1-10)"));
        try {
            coffee.getGredens().setTheGredens(grinding);
        } catch (OutOfBoundGriding ex) {
            JOptionPane.showMessageDialog(this,ex.getMessage());
        }
        this.setVisible(false);
    }//GEN-LAST:event_singleShotActionPerformed

    private void doubleShotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doubleShotActionPerformed
        // TODO add your handling code here:
        if(this.cofeeChioce==1){
              try{
                coffee.amricanoDoubleWater();
            }catch(AmricanoDoublewater e){
                JOptionPane.showMessageDialog(this, e.getMessage());
                if(JOptionPane.showInputDialog("Do You want to fill the water tank?(yes/no)").equalsIgnoreCase("yes")){
                    int amountOfWater=Integer.parseInt(JOptionPane.showInputDialog("Enter the amount of water you need to fill: (range:30 ml-1000 ml)"));
                    try{
                        coffee.getWater().setAmontOfWater(amountOfWater);
                    }catch(OutOfwater e1){
                        JOptionPane.showMessageDialog(this,e1.getMessage());                                               
                    }
                } 
            }
            try{
                coffee.amricanoDoubleBeans();
            }catch(AmricanoDoublebeans e){
                JOptionPane.showMessageDialog(this, e.getMessage());
                if(JOptionPane.showInputDialog("Do You want to fill the beans tank?(yes/no)").equalsIgnoreCase("yes")){
                    int amountOfBeans=Integer.parseInt(JOptionPane.showInputDialog("Enter the amount of beans you need to fill: (range: 7 gm-500 gm)"));
                    try{
                        coffee.getBeans().setAmountOfBeans(amountOfBeans);
                    }catch(OutOfBeans e1){
                        JOptionPane.showMessageDialog(this,e1.getMessage());                                              
                    }
                }
            }
        }else if(this.cofeeChioce==2){
            try{
                coffee.expressoDoubleWater();
            }catch(EspressoDoublewater e){
                JOptionPane.showMessageDialog(this, e.getMessage());
                if(JOptionPane.showInputDialog("Do You want to fill the water tank?(yes/no)").equalsIgnoreCase("yes")){
                    int amountOfWater=Integer.parseInt(JOptionPane.showInputDialog("Enter the amount of water you need to fill: (range:30 ml-1000 ml)"));
                    try{
                        coffee.getWater().setAmontOfWater(amountOfWater);
                    }catch(OutOfwater e1){
                        JOptionPane.showMessageDialog(this,e1.getMessage());                                               
                    }
                } 
            }
            try{
                coffee.expressoDoubleBeans();
            }catch(EspressoDoublebeans e){
                JOptionPane.showMessageDialog(this, e.getMessage());
                if(JOptionPane.showInputDialog("Do You want to fill the beans tank?(yes/no)").equalsIgnoreCase("yes")){
                    int amountOfBeans=Integer.parseInt(JOptionPane.showInputDialog("Enter the amount of beans you need to fill: (range: 7 gm-500 gm)"));
                    try{
                        coffee.getBeans().setAmountOfBeans(amountOfBeans);
                    }catch(OutOfBeans e1){
                        JOptionPane.showMessageDialog(this,e1.getMessage());                                              
                    }
                }
            }
        }
        int grinding=Integer.parseInt(JOptionPane.showInputDialog("Enter the degree of grinding you want:\n"+"PS: IT should be between(1-10)"));
        try {
            coffee.getGredens().setTheGredens(grinding);
        } catch (OutOfBoundGriding ex) {
            JOptionPane.showMessageDialog(this,ex.getMessage());
        }
        this.setVisible(false);
    }//GEN-LAST:event_doubleShotActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ShotMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ShotMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ShotMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ShotMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ShotMenu().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton doubleShot;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton singleShot;
    // End of variables declaration//GEN-END:variables
}
